Terminals unused in grammar

   '|'
   '&'
   UMINUS


Grammar

    0 $accept: program $end

    1 program: tokens

    2 tokens: tokens token
    3       | %empty

    4 token: ID
    5      | AND
    6      | OR
    7      | NEQ
    8      | LEQ
    9      | GEQ
   10      | EQ
   11      | TRUE_C
   12      | FALSE_C
   13      | INT_C
   14      | FLOAT_C
   15      | CONST
   16      | ELSE
   17      | IF
   18      | WHILE
   19      | FLOAT_T
   20      | INT_T
   21      | BOOL_T
   22      | VEC_T
   23      | IVEC_T
   24      | BVEC_T
   25      | FUNC
   26      | '+'
   27      | '-'
   28      | '*'
   29      | '/'
   30      | '^'
   31      | '!'
   32      | '='
   33      | '<'
   34      | '>'
   35      | ','
   36      | ';'
   37      | '('
   38      | ')'
   39      | '['
   40      | ']'
   41      | '{'
   42      | '}'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 31
'&' (38)
'(' (40) 37
')' (41) 38
'*' (42) 28
'+' (43) 26
',' (44) 35
'-' (45) 27
'/' (47) 29
';' (59) 36
'<' (60) 33
'=' (61) 32
'>' (62) 34
'[' (91) 39
']' (93) 40
'^' (94) 30
'{' (123) 41
'|' (124)
'}' (125) 42
error (256)
FLOAT_T (258) 19
INT_T (259) 20
BOOL_T (260) 21
CONST (261) 15
FALSE_C (262) 12
TRUE_C (263) 11
FUNC (264) 25
IF (265) 17
WHILE (266) 18
ELSE (267) 16
AND (268) 5
OR (269) 6
NEQ (270) 7
EQ (271) 10
LEQ (272) 8
GEQ (273) 9
VEC_T (274) 22
BVEC_T (275) 24
IVEC_T (276) 23
FLOAT_C (277) 14
INT_C (278) 13
ID (279) 4
UMINUS (280)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
tokens (47)
    on left: 2 3, on right: 1 2
token (48)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42, on right:
    2


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (tokens)

    program  go to state 1
    tokens   go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: tokens .
    2 tokens: tokens . token

    FLOAT_T  shift, and go to state 4
    INT_T    shift, and go to state 5
    BOOL_T   shift, and go to state 6
    CONST    shift, and go to state 7
    FALSE_C  shift, and go to state 8
    TRUE_C   shift, and go to state 9
    FUNC     shift, and go to state 10
    IF       shift, and go to state 11
    WHILE    shift, and go to state 12
    ELSE     shift, and go to state 13
    AND      shift, and go to state 14
    OR       shift, and go to state 15
    NEQ      shift, and go to state 16
    EQ       shift, and go to state 17
    LEQ      shift, and go to state 18
    GEQ      shift, and go to state 19
    VEC_T    shift, and go to state 20
    BVEC_T   shift, and go to state 21
    IVEC_T   shift, and go to state 22
    FLOAT_C  shift, and go to state 23
    INT_C    shift, and go to state 24
    ID       shift, and go to state 25
    '='      shift, and go to state 26
    '<'      shift, and go to state 27
    '>'      shift, and go to state 28
    '+'      shift, and go to state 29
    '-'      shift, and go to state 30
    '*'      shift, and go to state 31
    '/'      shift, and go to state 32
    '^'      shift, and go to state 33
    '!'      shift, and go to state 34
    ','      shift, and go to state 35
    ';'      shift, and go to state 36
    '('      shift, and go to state 37
    ')'      shift, and go to state 38
    '['      shift, and go to state 39
    ']'      shift, and go to state 40
    '{'      shift, and go to state 41
    '}'      shift, and go to state 42

    $default  reduce using rule 1 (program)

    token  go to state 43


State 3

    0 $accept: program $end .

    $default  accept


State 4

   19 token: FLOAT_T .

    $default  reduce using rule 19 (token)


State 5

   20 token: INT_T .

    $default  reduce using rule 20 (token)


State 6

   21 token: BOOL_T .

    $default  reduce using rule 21 (token)


State 7

   15 token: CONST .

    $default  reduce using rule 15 (token)


State 8

   12 token: FALSE_C .

    $default  reduce using rule 12 (token)


State 9

   11 token: TRUE_C .

    $default  reduce using rule 11 (token)


State 10

   25 token: FUNC .

    $default  reduce using rule 25 (token)


State 11

   17 token: IF .

    $default  reduce using rule 17 (token)


State 12

   18 token: WHILE .

    $default  reduce using rule 18 (token)


State 13

   16 token: ELSE .

    $default  reduce using rule 16 (token)


State 14

    5 token: AND .

    $default  reduce using rule 5 (token)


State 15

    6 token: OR .

    $default  reduce using rule 6 (token)


State 16

    7 token: NEQ .

    $default  reduce using rule 7 (token)


State 17

   10 token: EQ .

    $default  reduce using rule 10 (token)


State 18

    8 token: LEQ .

    $default  reduce using rule 8 (token)


State 19

    9 token: GEQ .

    $default  reduce using rule 9 (token)


State 20

   22 token: VEC_T .

    $default  reduce using rule 22 (token)


State 21

   24 token: BVEC_T .

    $default  reduce using rule 24 (token)


State 22

   23 token: IVEC_T .

    $default  reduce using rule 23 (token)


State 23

   14 token: FLOAT_C .

    $default  reduce using rule 14 (token)


State 24

   13 token: INT_C .

    $default  reduce using rule 13 (token)


State 25

    4 token: ID .

    $default  reduce using rule 4 (token)


State 26

   32 token: '=' .

    $default  reduce using rule 32 (token)


State 27

   33 token: '<' .

    $default  reduce using rule 33 (token)


State 28

   34 token: '>' .

    $default  reduce using rule 34 (token)


State 29

   26 token: '+' .

    $default  reduce using rule 26 (token)


State 30

   27 token: '-' .

    $default  reduce using rule 27 (token)


State 31

   28 token: '*' .

    $default  reduce using rule 28 (token)


State 32

   29 token: '/' .

    $default  reduce using rule 29 (token)


State 33

   30 token: '^' .

    $default  reduce using rule 30 (token)


State 34

   31 token: '!' .

    $default  reduce using rule 31 (token)


State 35

   35 token: ',' .

    $default  reduce using rule 35 (token)


State 36

   36 token: ';' .

    $default  reduce using rule 36 (token)


State 37

   37 token: '(' .

    $default  reduce using rule 37 (token)


State 38

   38 token: ')' .

    $default  reduce using rule 38 (token)


State 39

   39 token: '[' .

    $default  reduce using rule 39 (token)


State 40

   40 token: ']' .

    $default  reduce using rule 40 (token)


State 41

   41 token: '{' .

    $default  reduce using rule 41 (token)


State 42

   42 token: '}' .

    $default  reduce using rule 42 (token)


State 43

    2 tokens: tokens token .

    $default  reduce using rule 2 (tokens)
